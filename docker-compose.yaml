version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672


  postgress:
    image: postgres:latest
    container_name: 'postgress'
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres
    ports:
        - 5432:5432


  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    container_name: 'otel-collector'
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension

  prometheus:
    image: prom/prometheus:latest
    container_name: 'prometheus'
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
      - "9000:9000"


  grafana:
    image: grafana/grafana:latest
    container_name: 'grafana'
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - prometheus


  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml


  scheduler-notification:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 50
    # volumes:
    #   - ./src:/app
    # command:
    #   - sleep
    #   - infinity
    depends_on:
      - rabbitmq
      - postgress
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - POSTGRES_HOST=postgress
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - OPENTELEMETRY_HOST=otel-collector
      - OPENTELEMETRY_PORT=4317
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  redis:
    image: redis:latest
    container_name: 'redis'
    ports: 
      - "6379:6379"

